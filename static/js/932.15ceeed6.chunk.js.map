{"version":3,"file":"static/js/932.15ceeed6.chunk.js","mappings":"gTAgBMA,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAwFZ,UArFA,WACE,OAAgCC,EAAAA,EAAAA,UAASJ,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAUC,EAAAA,EAAAA,MAEVC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACtCL,GAAY,SAAAM,GAAY,yBACnBA,GADmB,cAErBX,EAAOU,EAAME,QAFQ,GAIzB,EAMD,OACE,SAAC,IAAD,CAAMC,GAAG,WAAWC,MAAM,SAASC,QAAQ,SAASC,EAAG,QAAvD,UACE,SAAC,KAAD,CAAKH,GAAG,QAAQI,EAAG,EAAGC,QAAQ,KAAKC,EAAG,GAAtC,UACE,SAAC,KAAD,CACEC,cAAerB,EACfsB,SATyB,WAC/Bf,GAAQgB,EAAAA,EAAAA,IAAalB,GACtB,EAKK,SAIG,YAA+B,IAA5BmB,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAChB,OACE,iBAAMH,SAAUE,EAAhB,UACE,UAAC,IAAD,CAAQE,QAAS,EAAGX,MAAM,aAA1B,WACE,UAAC,KAAD,CACEY,YAAaF,EAAOxB,MAA0B,KAAlBI,EAASJ,KADvC,WAGE,SAAC,IAAD,CAAW2B,QAAQ,WAAnB,mBACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,OACH9B,KAAK,OACL+B,KAAK,OACLC,QAAQ,SACRtB,MAAON,EAASJ,KAChBiC,SAAUzB,KAEZ,SAAC,KAAD,UAAmBgB,EAAOxB,WAG5B,UAAC,KAAD,CACE0B,YAAaF,EAAOtB,UAA+B,KAAnBE,EAASH,MAD3C,WAGE,SAAC,IAAD,CAAW0B,QAAQ,QAAnB,4BACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,QACH9B,KAAK,QACL+B,KAAK,QACLC,QAAQ,SACRtB,MAAON,EAASH,MAChBgC,SAAUzB,QAId,UAAC,KAAD,CACEkB,YAAaF,EAAOtB,UAAkC,KAAtBE,EAASF,SAD3C,WAGE,SAAC,IAAD,CAAWyB,QAAQ,WAAnB,uBACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,WACH9B,KAAK,WACL+B,KAAK,WACLC,QAAQ,SACRtB,MAAON,EAASF,SAChB+B,SAAUzB,KAEZ,SAAC,KAAD,UAAmBgB,EAAOtB,eAG5B,SAAC,IAAD,CAAQ6B,KAAK,SAASG,YAAY,SAASC,MAAM,OAAjD,8BAMP,OAKV,C","sources":["pages/RegistrationPage.jsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport { Field, Formik } from 'formik';\nimport { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { registration } from 'redux/auth/auth-operations';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nfunction RegistrationPage() {\n  const [formData, setFormData] = useState(initialState);\n  const dispath = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value.trim(),\n    }));\n  };\n\n  const handleRegistrationSubmit = () => {\n    dispath(registration(formData));\n  };\n\n  return (\n    <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h={'100vh'}>\n      <Box bg=\"white\" p={6} rounded=\"md\" w={64}>\n        <Formik\n          initialValues={initialState}\n          onSubmit={handleRegistrationSubmit}\n        >\n          {({ handleSubmit, errors }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                <VStack spacing={4} align=\"flex-start\">\n                  <FormControl\n                    isInvalid={!!errors.name && formData.name === ''}\n                  >\n                    <FormLabel htmlFor=\"password\">Name</FormLabel>\n                    <Field\n                      as={Input}\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      variant=\"filled\"\n                      value={formData.name}\n                      onChange={handleChange}\n                    />\n                    <FormErrorMessage>{errors.name}</FormErrorMessage>\n                  </FormControl>\n\n                  <FormControl\n                    isInvalid={!!errors.password && formData.email === ''}\n                  >\n                    <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                    <Field\n                      as={Input}\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      variant=\"filled\"\n                      value={formData.email}\n                      onChange={handleChange}\n                    />\n                  </FormControl>\n\n                  <FormControl\n                    isInvalid={!!errors.password && formData.password === ''}\n                  >\n                    <FormLabel htmlFor=\"password\">Password</FormLabel>\n                    <Field\n                      as={Input}\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      variant=\"filled\"\n                      value={formData.password}\n                      onChange={handleChange}\n                    />\n                    <FormErrorMessage>{errors.password}</FormErrorMessage>\n                  </FormControl>\n\n                  <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n                    Registration\n                  </Button>\n                </VStack>\n              </form>\n            );\n          }}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n}\nexport default RegistrationPage;\n"],"names":["initialState","name","email","password","useState","formData","setFormData","dispath","useDispatch","handleChange","target","value","prevFormData","trim","bg","align","justify","h","p","rounded","w","initialValues","onSubmit","registration","handleSubmit","errors","spacing","isInvalid","htmlFor","as","Input","id","type","variant","onChange","colorScheme","width"],"sourceRoot":""}